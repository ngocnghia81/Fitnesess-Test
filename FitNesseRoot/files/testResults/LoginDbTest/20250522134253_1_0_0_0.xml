<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20250223</FitNesseVersion>
  <rootPath>LoginDbTest</rootPath>
  <result>
    <counts>
      <right>2</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>0</exceptions>
    </counts>
    <date>2025-05-22T13:42:53+07:00</date>
    <runTimeInMillis>427</runTimeInMillis>
    <content>&lt;br/&gt;&lt;span class="meta"&gt;variable defined: TEST_SYSTEM=slim&lt;/span&gt;
&lt;br/&gt;&lt;span class="meta"&gt;variable defined: COMMAND_PATTERN=java -cp %p fitnesse.slim.SlimService&lt;/span&gt;
&lt;br/&gt;&lt;span class="meta"&gt;classpath: D:\Documents\FitNesseFixtures&lt;/span&gt;&lt;br/&gt;&lt;span class="meta"&gt;classpath: D:\Documents\FitNesseFixtures\fixtures&lt;/span&gt;&lt;br/&gt;&lt;span class="meta"&gt;classpath: D:\workspace\university\Nam3_HK2\KiemDinhPhanMem\Fitnesse\fitnesse-standalone.jar&lt;/span&gt;&lt;br/&gt;&lt;span class="meta"&gt;classpath: D:\Documents\FitNesseFixtures\sqlite-jdbc-3.42.0.0.jar&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;h1 id="0"&gt;Database Login Test&lt;/h1&gt;
&lt;br/&gt;This test verifies the database operations using the DatabaseFixture&lt;a title="create page" href="DatabaseFixture?edit&amp;amp;nonExistent=true"&gt;[?]&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;&lt;h2 id="1"&gt;Test Cases&lt;/h2&gt;
&lt;br/&gt;&lt;h3 id="2"&gt;Check User Role&lt;/h3&gt;
&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;Import&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;&lt;span class="pass"&gt;fixtures&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td colspan="2"&gt;&lt;span class="pass"&gt;fixtures.DatabaseFixture&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;username&lt;/td&gt;
		&lt;td&gt;expectedRole?&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor1"&gt;
		&lt;td&gt;johnd&lt;/td&gt;
		&lt;td&gt;&lt;span class="pass"&gt;customer&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor0"&gt;
		&lt;td&gt;nonexistentuser&lt;/td&gt;
		&lt;td&gt;&lt;span class="pass"&gt;none&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;h2 id="3"&gt;Extended Database Tests&lt;/h2&gt;
&lt;br/&gt;&lt;h3 id="4"&gt;Test Order Table Queries&lt;/h3&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Comment&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;This is a placeholder for order table tests&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;In a real implementation, we would add tests for order operations&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;h3 id="5"&gt;Test Product Table Queries&lt;/h3&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Comment&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;This is a placeholder for product table tests&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;In a real implementation, we would add tests for product operations&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;h3 id="6"&gt;Test Data Integrity&lt;/h3&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Comment&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;This is a placeholder for data integrity tests&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;In a real implementation, we would add tests to verify data integrity constraints&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
</content>
    <relativePageName>LoginDbTest</relativePageName>
    <instructions>
      <instructionResult>
        <instruction>{id='import_0_0', instruction='import', path='fixtures'}</instruction>
        <slimResult>pass(fixtures)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>import_0_0</instructionId>
          <col>0</col>
          <row>1</row>
          <type>ImportExpectation</type>
          <evaluationMessage>fixtures</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_1_0', instruction='make', instanceName='decisionTable_1', className='fixtures.DatabaseFixture', args=[]}</instruction>
        <slimResult>pass(fixtures.DatabaseFixture)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>decisionTable_1_0</instructionId>
          <col>0</col>
          <row>0</row>
          <type>ConstructionExpectation</type>
          <evaluationMessage>fixtures.DatabaseFixture</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_1_4', instruction='call', instanceName='decisionTable_1', methodName='setUsername', args=[johnd]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_1_4</instructionId>
          <col>0</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_1_6', instruction='call', instanceName='decisionTable_1', methodName='expectedRole', args=[]}</instruction>
        <slimResult>pass(customer)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>decisionTable_1_6</instructionId>
          <col>1</col>
          <row>2</row>
          <type>ReturnedValueExpectation</type>
          <evaluationMessage>customer</evaluationMessage>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_1_8', instruction='call', instanceName='decisionTable_1', methodName='setUsername', args=[nonexistentuser]}</instruction>
        <slimResult></slimResult>
        <expectation>
          <instructionId>decisionTable_1_8</instructionId>
          <col>0</col>
          <row>3</row>
          <type>VoidReturnExpectation</type>
        </expectation>
      </instructionResult>
      <instructionResult>
        <instruction>{id='decisionTable_1_10', instruction='call', instanceName='decisionTable_1', methodName='expectedRole', args=[]}</instruction>
        <slimResult>pass(none)</slimResult>
        <expectation>
          <status>pass</status>
          <instructionId>decisionTable_1_10</instructionId>
          <col>1</col>
          <row>3</row>
          <type>ReturnedValueExpectation</type>
          <evaluationMessage>none</evaluationMessage>
        </expectation>
      </instructionResult>
    </instructions>
  </result>
  <executionLog>
    <testSystem>slim:fitnesse.slim.SlimService</testSystem>
    <command>java -cp D:\Documents\FitNesseFixtures;D:\Documents\FitNesseFixtures\fixtures;D:\workspace\university\Nam3_HK2\KiemDinhPhanMem\Fitnesse\fitnesse-standalone.jar;D:\Documents\FitNesseFixtures\sqlite-jdbc-3.42.0.0.jar;D:\workspace\university\Nam3_HK2\KiemDinhPhanMem\Fitnesse\fitnesse-standalone.jar fitnesse.slim.SlimService 1</command>
    <exitCode>0</exitCode>
    <stdOut></stdOut>
    <stdErr></stdErr>
  </executionLog>
  <finalCounts>
    <right>1</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  <totalRunTimeInMillis>687</totalRunTimeInMillis>
</testResults>

